// Mixins -- Standard
//
// Standard and common mixins.

// sass-lint:disable no-important

// Clearfix
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible(
  $position-value: 'absolute',
  $important: true
) {
  // Build the position value.
  $position: if($important, $position-value + ' !important', $position-value);

  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  overflow: hidden;
  position: #{$position};
  width: 1px;
}

// Turns off the element-invisible effect.
@mixin element-invisible-off(
  $position-value: 'static',
  $important: true
) {
  // Build the position value.
  $position: if($important, $position-value + ' !important', $position-value);

  clip: auto;
  height: auto;
  overflow: auto;
  position: #{$position};
  width: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

// Helper function for working with Sass maps.
// Example: @include print($configuration);
@mixin print($declarations) {
  @each $property, $value in $declarations {
    #{$property}: $value;
  }
}
